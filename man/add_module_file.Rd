% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/add_funs.R
\name{add_module_file}
\alias{add_module_file}
\title{Create a module file}
\usage{
add_module_file(
  mod_name,
  main_dir = "shinymodules",
  ui_params = NULL,
  server_params = NULL,
  main = FALSE,
  pkg = TRUE,
  open = TRUE
)
}
\arguments{
\item{mod_name}{The name/path of the new module.}

\item{main_dir}{The name of the main parent directory of all modules}

\item{ui_params}{Additional arguments for the ui function of the module}

\item{server_params}{Additional arguments for the server function of the module}

\item{main}{Logical to state if this is a main / top level module, that is going
to be placed directly in the ui and server functions of your shiny app.
This matters because it affects the \code{box::use()} declarations of the module
as well as wether a namespacing function needs to be applied to the ui function call of
the module.}

\item{pkg}{Wether you are developing your app as a package.
If TRUE then the directory will be created inside of the `/inst` directory.}

\item{open}{Wether to open the module file or not}
}
\description{
This function creates an R-file with your shiny module template. The argument `mod_name` needs to be the
   path of your module file, however you don't need to (and shouldn't) add the ".R" file extension to it.
}
\examples{
add_module_dir("tabs")
add_module_file("tabs/tab_one")
}
